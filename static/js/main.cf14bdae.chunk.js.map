{"version":3,"sources":["components/EmpTable/index.tsx","components/SearchBar/index.tsx","utils/API.tsx","utils/sortEmp.tsx","components/EmpContainer/index.tsx","App.tsx","index.tsx"],"names":["EmpTable","props","empArr","results","useState","sortedField","sortedArr","sort","a","b","firstName","useStyles","makeStyles","table","minWidth","rows","map","emp","TableRow","hover","TableCell","align","id","alt","lastName","src","picture","email","cell","classes","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableSortLabel","active","orderBy","onClick","handleSort","order","TableBody","theme","createStyles","root","margin","spacing","width","SearchBar","handleInput","noValidate","autoComplete","TextField","label","name","variant","color","onChange","API","getEmployees","axios","get","sortEmp","searchEmp","value","filter","toLowerCase","includes","compareValues","key","hasOwnProperty","varA","toUpperCase","varB","comparison","EmpContainer","state","search","column","sorted","newOrder","setState","event","target","filteredArr","then","res","empData","data","medium","first","last","catch","err","console","log","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf14bdae.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\n\nfunction EmpTable(props: { results: any[]; orderBy: string; order: string; handleSort: (arg0: string, arg1: any) => void; }) {\n\n    const empArr = props.results;\n    const [sortedField] = useState(null);\n    const sortedArr = [...empArr];\n\n    if (sortedField)\n        sortedArr.sort((a, b) => {\n            if (a.firstName < b.firstName) {\n                return -1;\n            }\n            if (a.firstName > b.firstName) {\n                return 1;\n            }\n            return 0;\n        });\n\n    const useStyles = makeStyles({\n        table: {\n            minWidth: 650,\n        },\n    });\n\n    let rows = props.results.map((emp) => {\n        return (\n            <TableRow hover key={emp.id}>\n                <TableCell align=\"center\">{emp.id}</TableCell>\n                <TableCell align=\"center\"><img alt={`${emp.firstName} ${emp.lastName}`} src={`${emp.picture}`}></img></TableCell>\n                <TableCell align=\"center\">{emp.firstName}</TableCell>\n                <TableCell align=\"center\">{emp.lastName}</TableCell>\n                <TableCell align=\"center\">{emp.email}</TableCell>\n                <TableCell align=\"center\">{emp.cell}</TableCell>\n            </TableRow>\n        )\n    });\n\n    const classes = useStyles();\n\n    return (\n        <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\">ID\n                        <TableSortLabel active={props.orderBy === \"firstName\"} onClick={() => props.handleSort(\"id\", props.order)}></TableSortLabel>\n                        </TableCell>\n                        <TableCell align=\"center\">Photo\n                        <TableSortLabel active={props.orderBy === \"photo\"} onClick={() => props.handleSort(\"photo\", props.order)}></TableSortLabel>\n                        </TableCell>\n                        <TableCell align=\"center\">First Name\n                        <TableSortLabel active={props.orderBy === \"firstName\"} onClick={() => props.handleSort(\"firstName\", props.order)}></TableSortLabel>\n                        </TableCell>\n                        <TableCell align=\"center\">Last Name\n                        <TableSortLabel active={props.orderBy === \"lastName\"} onClick={() => props.handleSort(\"lastName\", props.order)}></TableSortLabel>\n                        </TableCell>\n                        <TableCell align=\"center\">Email\n                        <TableSortLabel active={props.orderBy === \"email\"} onClick={() => props.handleSort(\"email\", props.order)}></TableSortLabel>\n                        </TableCell>\n                        <TableCell align=\"center\">Phone Number\n                        <TableSortLabel active={props.orderBy === \"phone\"} onClick={() => props.handleSort(\"cell\", props.order)}></TableSortLabel>\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows}\n                </TableBody>\n            </Table>\n        </TableContainer >\n    )\n};\n\nexport default EmpTable;","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '80ch',\n        align: 'center',\n      },\n    },\n  }),\n);\n\n\ntype Props = {\n  handleInput: any;\n}\n\nconst SearchBar: React.FC<Props> = ({\n  handleInput\n}) => {\n  const classes = useStyles();\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <TextField\n        id=\"standard-search\"\n        label=\"Employee Search\"\n        name=\"search\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        onChange={handleInput}\n      />\n    </form>\n  );\n}\n\nexport default SearchBar;","import axios from \"axios\";\n\nconst API = {\n    getEmployees: function () {\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\")\n    }\n}\n\nexport default API;\n","const sortEmp = {\n    searchEmp: (value: string, empArr: any[]) => {\n        let filteredEmps = empArr.filter((emp: { firstName: string; lastName: string; email: string; cell: string; }) => {\n            return emp.firstName.toLowerCase().includes(value.toLowerCase()) ||\n                emp.lastName.toLowerCase().includes(value.toLowerCase()) ||\n                emp.email.toLowerCase().includes(value.toLowerCase()) ||\n                emp.cell.toLowerCase().includes(value.toLowerCase())\n        })\n        return filteredEmps;\n    },\n\n    // object sorting function from https://www.sitepoint.com/sort-an-array-of-objects-in-javascript/\n    compareValues: (key: string | number, order = 'asc') => {\n        return function innerSort(a: { [x: string]: any; hasOwnProperty: (arg0: any) => any; }, b: { [x: string]: any; hasOwnProperty: (arg0: any) => any; }) {\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n                return 0;\n            }\n\n            const varA = (typeof a[key] === 'string')\n                ? a[key].toUpperCase() : a[key];\n            const varB = (typeof b[key] === 'string')\n                ? b[key].toUpperCase() : b[key];\n\n            let comparison = 0;\n            if (varA > varB) {\n                comparison = 1;\n            } else if (varA < varB) {\n                comparison = -1;\n            }\n            return (\n                (order === 'desc') ? (comparison * -1) : comparison\n            );\n        };\n    }\n}\n\nexport default sortEmp;","import React, { Component } from 'react';\nimport EmpTable from \"../EmpTable\";\nimport SearchBar from \"../SearchBar\";\nimport API from \"../../utils/API\";\nimport sortEmp from \"../../utils/sortEmp\";\nimport \"./style.css\";\n\nclass EmpContainer extends Component {\n\n    state = {\n        empArr: [],\n        sortedArr: [],\n        search: '',\n        orderBy: '',\n        order: \"asc\"\n    };\n\n    componentDidMount() {\n        API.getEmployees()\n            .then((res) => {\n                let empData = res.data.results.map(\n                    (emp:\n                        {\n                            id: { value: string; };\n                            picture: { medium: string; };\n                            name: { first: string; last: string; };\n                            email: string; cell: string;\n                        }) => {\n                        return {\n                            id: emp.id.value,\n                            picture: emp.picture.medium,\n                            firstName: emp.name.first,\n                            lastName: emp.name.last,\n                            email: emp.email,\n                            cell: emp.cell\n                        }\n                    })\n                this.setState({\n                    empArr: empData,\n                    sortedArr: empData\n                })\n                return this.state.empArr;\n            })\n            .catch((err: any) => console.log(err))\n    }\n\n    handleSort = (column: any, order: string) => {\n        let sorted = [...this.state.empArr].sort(sortEmp.compareValues(column, order));\n        let newOrder = order === \"asc\" ? \"desc\" : \"asc\"\n        this.setState({\n            empArr: sorted,\n            orderBy: column,\n            order: newOrder\n        });\n    }\n\n    handleInput = (event: { target: { value: any; name: any; }; }) => {\n        let value = event.target.value;\n        const name = event.target.name;\n\n        this.setState({\n            [name]: value\n        }, () => {\n            if (this.state.search) {\n                let filteredArr = sortEmp.searchEmp(this.state.search, this.state.sortedArr);\n                this.setState({\n                    empArr: filteredArr,\n                    orderBy: \"\"\n                })\n            } else {\n                this.setState({\n                    empArr: this.state.sortedArr,\n                    orderBy: \"\"\n                })\n            }\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <div className=\"searchContainer\">\n                    <SearchBar handleInput={this.handleInput} />\n                </div>\n                <EmpTable results={this.state.empArr} handleSort={this.handleSort} orderBy={this.state.orderBy} order={this.state.order} />\n            </>\n        )\n    }\n}\n\nexport default EmpContainer;","import React from \"react\";\nimport EmpContainer from \"./components/EmpContainer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n      <header>\n        <h1>Team Directory</h1>\n      </header>\n      <EmpContainer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}