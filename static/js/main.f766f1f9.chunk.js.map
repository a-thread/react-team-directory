{"version":3,"sources":["components/EmpTable/index.tsx","components/SearchBar/index.tsx","utils/API.tsx","utils/sortEmp.tsx","components/EmpContainer/index.tsx","App.tsx","index.tsx"],"names":["EmpTable","props","empArr","results","useState","sortedField","sortedArr","sort","a","b","firstName","useStyles","makeStyles","table","minWidth","rows","map","emp","TableRow","hover","TableCell","align","id","alt","lastName","src","picture","email","cell","classes","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableSortLabel","active","orderBy","onClick","handleSort","order","TableBody","theme","createStyles","root","margin","spacing","width","SearchBar","handleInput","noValidate","autoComplete","TextField","label","name","variant","color","onChange","API","getEmployees","axios","get","sortEmp","searchEmp","value","filter","toLowerCase","includes","compareValues","key","hasOwnProperty","varA","toUpperCase","varB","comparison","EmpContainer","state","search","column","sorted","newOrder","setState","event","target","filteredArr","then","res","empData","data","large","first","last","catch","err","console","log","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f766f1f9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nfunction EmpTable(props: { results: any[]; orderBy: string; order: string; handleSort: (arg0: string, arg1: any) => void; }) {\r\n\r\n    const empArr = props.results;\r\n    const [sortedField] = useState(null);\r\n    const sortedArr = [...empArr];\r\n\r\n    if (sortedField)\r\n        sortedArr.sort((a, b) => {\r\n            if (a.firstName < b.firstName) {\r\n                return -1;\r\n            }\r\n            if (a.firstName > b.firstName) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n\r\n    const useStyles = makeStyles({\r\n        table: {\r\n            minWidth: 650,\r\n        },\r\n    });\r\n\r\n    let rows = props.results.map((emp) => {\r\n        return (\r\n            <TableRow hover key={emp.id}>\r\n                <TableCell align=\"center\">{emp.id}</TableCell>\r\n                <TableCell align=\"center\"><img alt={`${emp.firstName} ${emp.lastName}`} src={`${emp.picture}`}></img></TableCell>\r\n                <TableCell align=\"center\">{emp.firstName}</TableCell>\r\n                <TableCell align=\"center\">{emp.lastName}</TableCell>\r\n                <TableCell align=\"center\">{emp.email}</TableCell>\r\n                <TableCell align=\"center\">{emp.cell}</TableCell>\r\n            </TableRow>\r\n        )\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"center\">ID\r\n                        <TableSortLabel active={props.orderBy === \"firstName\"} onClick={() => props.handleSort(\"id\", props.order)}></TableSortLabel>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">Photo\r\n                        <TableSortLabel active={props.orderBy === \"photo\"} onClick={() => props.handleSort(\"photo\", props.order)}></TableSortLabel>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">First Name\r\n                        <TableSortLabel active={props.orderBy === \"firstName\"} onClick={() => props.handleSort(\"firstName\", props.order)}></TableSortLabel>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">Last Name\r\n                        <TableSortLabel active={props.orderBy === \"lastName\"} onClick={() => props.handleSort(\"lastName\", props.order)}></TableSortLabel>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">Email\r\n                        <TableSortLabel active={props.orderBy === \"email\"} onClick={() => props.handleSort(\"email\", props.order)}></TableSortLabel>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">Cell Number\r\n                        <TableSortLabel active={props.orderBy === \"phone\"} onClick={() => props.handleSort(\"cell\", props.order)}></TableSortLabel>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer >\r\n    )\r\n};\r\n\r\nexport default EmpTable;","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '80ch',\r\n        align: 'center',\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\n\r\ntype Props = {\r\n  handleInput: any;\r\n}\r\n\r\nconst SearchBar: React.FC<Props> = ({\r\n  handleInput\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <TextField\r\n        id=\"standard-search\"\r\n        label=\"Employee Search\"\r\n        name=\"search\"\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        onChange={handleInput}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchBar;","import axios from \"axios\";\r\n\r\nconst API = {\r\n    getEmployees: function () {\r\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\")\r\n    }\r\n}\r\n\r\nexport default API;\r\n","const sortEmp = {\r\n    searchEmp: (value: string, empArr: any[]) => {\r\n        let filteredEmps = empArr.filter((emp: { firstName: string; lastName: string; email: string; cell: string; }) => {\r\n            return emp.firstName.toLowerCase().includes(value.toLowerCase()) ||\r\n                emp.lastName.toLowerCase().includes(value.toLowerCase()) ||\r\n                emp.email.toLowerCase().includes(value.toLowerCase()) ||\r\n                emp.cell.toLowerCase().includes(value.toLowerCase())\r\n        })\r\n        return filteredEmps;\r\n    },\r\n\r\n    // object sorting function from https://www.sitepoint.com/sort-an-array-of-objects-in-javascript/\r\n    compareValues: (key: string | number, order = 'asc') => {\r\n        return function innerSort(a: { [x: string]: any; hasOwnProperty: (arg0: any) => any; }, b: { [x: string]: any; hasOwnProperty: (arg0: any) => any; }) {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                return 0;\r\n            }\r\n\r\n            const varA = (typeof a[key] === 'string')\r\n                ? a[key].toUpperCase() : a[key];\r\n            const varB = (typeof b[key] === 'string')\r\n                ? b[key].toUpperCase() : b[key];\r\n\r\n            let comparison = 0;\r\n            if (varA > varB) {\r\n                comparison = 1;\r\n            } else if (varA < varB) {\r\n                comparison = -1;\r\n            }\r\n            return (\r\n                (order === 'desc') ? (comparison * -1) : comparison\r\n            );\r\n        };\r\n    }\r\n}\r\n\r\nexport default sortEmp;","import React, { Component } from 'react';\r\nimport EmpTable from \"../EmpTable\";\r\nimport SearchBar from \"../SearchBar\";\r\nimport API from \"../../utils/API\";\r\nimport sortEmp from \"../../utils/sortEmp\";\r\nimport \"./style.css\";\r\n\r\nclass EmpContainer extends Component {\r\n\r\n    state = {\r\n        empArr: [],\r\n        sortedArr: [],\r\n        search: '',\r\n        orderBy: '',\r\n        order: \"asc\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        API.getEmployees()\r\n            .then((res) => {\r\n                let empData = res.data.results.map(\r\n                    (emp:\r\n                        {\r\n                            id: { value: string; };\r\n                            picture: { large: string; };\r\n                            name: { first: string; last: string; };\r\n                            email: string; cell: string;\r\n                        }) => {\r\n                        return {\r\n                            id: emp.id.value,\r\n                            picture: emp.picture.large,\r\n                            firstName: emp.name.first,\r\n                            lastName: emp.name.last,\r\n                            email: emp.email,\r\n                            cell: emp.cell\r\n                        }\r\n                    })\r\n                this.setState({\r\n                    empArr: empData,\r\n                    sortedArr: empData\r\n                })\r\n                return this.state.empArr;\r\n            })\r\n            .catch((err: any) => console.log(err))\r\n    }\r\n\r\n    handleSort = (column: any, order: string) => {\r\n        let sorted = [...this.state.empArr].sort(sortEmp.compareValues(column, order));\r\n        let newOrder = order === \"asc\" ? \"desc\" : \"asc\"\r\n        this.setState({\r\n            empArr: sorted,\r\n            orderBy: column,\r\n            order: newOrder\r\n        });\r\n    }\r\n\r\n    handleInput = (event: { target: { value: any; name: any; }; }) => {\r\n        let value = event.target.value;\r\n        const name = event.target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        }, () => {\r\n            if (this.state.search) {\r\n                let filteredArr = sortEmp.searchEmp(this.state.search, this.state.sortedArr);\r\n                this.setState({\r\n                    empArr: filteredArr,\r\n                    orderBy: \"\"\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    empArr: this.state.sortedArr,\r\n                    orderBy: \"\"\r\n                })\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"searchContainer\">\r\n                    <SearchBar handleInput={this.handleInput} />\r\n                </div>\r\n                <div className=\"tableContainer\">\r\n                    <EmpTable results={this.state.empArr} handleSort={this.handleSort} orderBy={this.state.orderBy} order={this.state.order} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EmpContainer;","import React from \"react\";\nimport EmpContainer from \"./components/EmpContainer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n      <header>\n        <h1>Team Directory</h1>\n      </header>\n        <EmpContainer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}